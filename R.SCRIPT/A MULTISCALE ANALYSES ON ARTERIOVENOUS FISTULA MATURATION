---
title: "A MULTISCALE ANALYSES ON ARTERIOVENOUS FISTULA MATURATION"
output: 
  html_notebook: 
    theme: cerulean
    highlight: textmate
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```

***

BACKGROUND
[Deep Learning with R](https://www.manning.com/books/deep-learning-with-r)
Almost 15% of the population of the United States is affected by end stage renal disease, which requires [hemodialysis treatment](https://www.niddk.nih.gov/health-information/kidney-disease/kidney-failure/hemodialysis) until kidney transplant. 
[Arteriovenous fistula](https://surgery.ucsf.edu/conditions--procedures/vascular-access-for-hemodialysis.aspx) is recognized as the best hemodialysis access, as it has been reported to have lower thrombosis and infection rates compared to other fistulas. However, obtaining clinically mature fistula is challenging and the causes of fistula maturation failures are unknown. [Increasing research investigations](https://pubs.rsna.org/doi/pdf/10.1148/radiol.2015150385) are being performed to gain an insight into the mechanisms of maturation failure, from vascular anatomy and hemodynamics, to cell dysfunction and genomics that might play a role in vascular maturation.
The [Division of Vascular Surgery at University of Florida](https://vascular.surgery.med.ufl.edu/research/national-institutes-of-health-study-of-av-fistulas/) has dedicated 8 years of research on a multiscale analysis on artero-venous fistula maturation.

***

Let's look at a concrete example of a neural network that uses the Keras R package to learn to classify hand-written digits. Unless you already have experience with Keras or similar libraries, you will not understand everything about this first example right away. You probably haven't even installed Keras yet. Don't worry, that is perfectly fine. In the next chapter, we will review each element in our example and explain them in detail. So don't worry if some steps seem arbitrary or look like magic to you! We've got to start somewhere.

The problem we're trying to solve here is to classify grayscale images of handwritten digits (28 pixels by 28 pixels) into their 10 categories (0 to 9). We'll use the MNIST dataset, a classic dataset in the machine-learning community, which has been around almost as long as the field itself and has been intensively studied. It's a set of 60,000 training images, plus 10,000 test images, assembled by the National Institute of Standards and Technology (the NIST in MNIST) in the 1980s. You can think of "solving" MNIST as the "Hello World" of deep learningâ€”it's what you do to verify that your algorithms are working as expected. As you become a machine-learning practitioner, you'll see MNIST come up over and over again, in scientific papers, blog posts, and so on. 

The MNIST dataset comes preloaded in Keras, in the form of `train` and `test` lists, each of which includes a set of images (`x`) and associated labels (`y`):

```{r, results='hide'}
library(keras)
